//class CompanyJobRepository {
//	static String getJobPrediction(int age, String highestQualification) throws NotEligibleException {
//		String reString = " ";
//		if (age >= 200 || age <= 0) {
//			throw new NotEligibleException("The age entered is not typical for a human being");
//		} else if (age < 19) {
//			throw new NotEligibleException("You are underage for any job");
//		} else if (age >= 21 && age < 26 && highestQualification.equalsIgnoreCase("B.E")) {
//			reString = "We have openings for junior developer";
//		} else if (age >= 26
//				&& (highestQualification.equalsIgnoreCase("M.S") || highestQualification.equalsIgnoreCase("PhD"))) {
//			reString = "We have openings for senior developer";
//		} else if (age >= 19 && highestQualification.equals("")) {
//			throw new NotEligibleException("We do not have any job that matches your qualifications");
//		} else {
//			reString = "Sorry we have no openings for now";
//		}
//		return reString;
//
//	}
//}
//
//public class Source {
//	public String searchForJob(int age, String highestQualification) throws Exception {
//		return CompanyJobRepository.getJobPrediction(age, highestQualification);
//	}
//
//	public static void main(String args[]) {
//		/* Enter your code here. Read input from STDIN. Print output to STDOUT */
//	}
//}
//
//class NotEligibleException extends Exception {
//	String arg;
//
//	public NotEligibleException(String arg) {
//		super(arg);
//	}
//}

import java.util.ArrayList;
import java.util.HashMap;

class Mobile {
	// Write your code here..
	HashMap<String, ArrayList<String>> mobiles = new HashMap<>();

	public String addMobile(String company, String model) {
		ArrayList<String> arrayList = mobiles.get(company);
		if (!mobiles.containsKey(company)) {
			arrayList = new ArrayList<>();
			mobiles.put(company, arrayList);
		}
		arrayList.add(model);

		return "model successfully added";

	}

	public void getModels() {
		System.out.println(mobiles);

	}

	public String buyMobile(String company, String model) {
//		ArrayList<String> arrayList = mobiles.get(company);
		if (!mobiles.containsKey(company) || !mobiles.containsValue(model)) {
			return "item not available";
		}

		mobiles.get(company).remove(model);
		return "mobile sold successfully";
		

	}
}

public class Source {
	public static void main(String args[]) throws Exception {
		/* Enter your code here. Read input from STDIN. Print output to STDOUT */
		Mobile mobile = new Mobile();
		mobile.addMobile("samsung", "galaxy s4");
		mobile.addMobile("samsung", "galaxy s5");
		mobile.addMobile("apple", "iphone 11");
		System.out.println(mobile.buyMobile("samsung", "galaxy s5"));
		mobile.getModels();
	}
}